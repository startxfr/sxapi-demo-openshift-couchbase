{
    "name": "sxapi-demo-openshift-couchbase-prod-api",
    "description": "API application for the sxapi openshift demo",
    "version": "0.1.33",
    "debug": true,
    "log": {
        "filters": {
            "type": "info,error,warn"
        },
        "couchbase": {
            "resource": "couchbase-api",
            "eventName": "application:log",
            "keyPrefix": "log::"
        }
    },
    "session": {
        "duration": 3600,
        "auto_create": true,
        "transport": {
            "type": "cookie",
            "cookie_name": "sxapi-sess"
        },
        "backend": {
            "type": "couchbase",
            "resource": "couchbase-api",
            "key_ns": "session::",
            "fields": {
                "ip": "ip_sess",
                "token": "token_sess",
                "start": "start_sess",
                "stop": "stop_sess"
            }
        }
    },
    "resources": {
        "couchbase-api": {
            "_class": "couchbase",
            "cluster": "http://{{{COUCHBASE_NODE_UI_SERVICE_HOST}}}:{{{COUCHBASE_NODE_UI_SERVICE_PORT}}}",
            "bucket": "{{{COUCHBASE_BUCKET}}}",
            "user": "{{{COUCHBASE_USER}}}",
            "password": "{{{COUCHBASE_PASSWORD}}}"
        },
        "websocket-bot": {
            "_class": "websocket-client",
            "host": "http://{{{BOT_SERVICE_HOST}}}:8080"
        },
        "serviceinfo-api": {
            "_class": "serviceinfo"
        },
        "insee-api": {
            "_class": "insee"
        }
    },
    "server": {
        "type": "express",
        "port": "8080",
        "lib": "./mylib",
        "enableWebsockets": true,
        "websockets": {
            "events": [
                {
                    "event": "system:log:trace",
                    "handler": "$ws.lib.websockets.systemLogTraceEndpoint",
                    "outputResource": "couchbase-api",
                    "eventName": "browser:trace",
                    "keyPrefix": "browser_trace::"
                },
                {
                    "event": "disconnect",
                    "handler": "$ws.lib.websockets.disconnectEndpoint"
                }
            ]
        },
        "endpoints": [
            {
                "path": "/",
                "desc": "display API welcome message",
                "header": {
                    "Content-Type": "text/html"
                },
                "body": [
                    "<html>",
                    "<head><title>Application {{name}}</title></head>",
                    "<link rel=\"stylesheet\" href=\"https://goo.gl/4kFNLH\">",
                    "<body><div class=\"container\">",
                    "<h1><span class=\"glyphicon glyphicon-eye-open\"></span> Your API {{name}} is live !</h1>",
                    "<div class=\"alert alert-success\" role=\"alert\"><p>This API is {{description}} running on <b>{{hostname}}</b> with current release <b>v{{version}}</b></p></div>",
                    "<div class=\"alert alert-info\" role=\"alert\"><p>The application signature is <b>{{appsign}}</b> and corespond to the example API using micro-service framework <b>{{package.name}} v{{package.version}}</b>.</p></div>",
                    "<nav class=\"navbar navbar-default navbar-fixed-bottom\"><div class=\"container\"> Microservice engine is <b>{{package.name}} v{{package.version}}</b>. {{package.description}}</div></nav>",
                    "</div></body>",
                    "</html>"
                ]
            },
            {
                "path": "/health",
                "resource": "serviceinfo-api",
                "endpoint": "health"
            },
            {
                "path": "/info",
                "desc": "Display technical informations about this API",
                "resource": "serviceinfo-api",
                "endpoint": "info"
            },
            {
                "path": "/ping",
                "desc": "Ping the application. Return a sample message in text",
                "code": "200",
                "body": "pong"
            },
            {
                "path": "/sessions",
                "desc": "informations about user sessions",
                "method": "ROUTER",
                "resource": "couchbase-api",
                "table": "session",
                "id_field": "id_sess",
                "endpoints": [
                    {
                        "path": "/sessions",
                        "desc": "List user sessions",
                        "method": "GET",
                        "endpoint": "list",
                        "sql": "SELECT * FROM session ORDER BY  date_sess DESC LIMIT 200"
                    }
                ]
            },
            {
                "path": "/sessions",
                "desc": "List informations about users sessions",
                "method": "ROUTER",
                "resource": "couchbase-api",
                "endpoints": [
                    {
                        "path": "/sessions",
                        "method": "GET",
                        "endpoint": "list",
                        "n1ql": "SELECT * FROM session ORDER BY date_sess DESC  LIMIT 50"
                    }
                ]
            }
        ]
    },
    "bot": {
        "lib": "./mylib",
        "cron": [
            {
                "id": "test-cron-task",
                "name": "Execute test cron task",
                "schedule": "*/1 * * * *",
                "task": "cronTestHandler",
                "socketResource": "websocket-bot"
            }
        ]
    }
}
